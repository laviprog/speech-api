"""Initial migration

Revision ID: 5f6d57511cad
Revises: 
Create Date: 2025-10-15 10:01:23.008417

"""
from typing import Sequence, Union

import advanced_alchemy
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f6d57511cad'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_admins'))
    )
    op.create_index(op.f('ix_admins_email'), 'admins', ['email'], unique=True)
    op.create_table('users',
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('deleted_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table('api_keys',
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('key_prefix', sa.String(length=15), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('deleted_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_keys_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys'))
    )
    op.create_index(op.f('ix_api_keys_key_hash'), 'api_keys', ['key_hash'], unique=True)
    op.create_index(op.f('ix_api_keys_user_id'), 'api_keys', ['user_id'], unique=False)
    op.create_table('transcription_tasks',
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', name='task_status'), nullable=False),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('model', sa.Enum('SMALL', 'TURBO', 'LARGE_V3_TURBO', name='transcription_model'), nullable=False),
    sa.Column('language', sa.Enum('RU', 'EN', name='transcription_language'), nullable=False),
    sa.Column('recognition_mode', sa.Boolean(), nullable=False),
    sa.Column('num_speakers', sa.Integer(), nullable=True),
    sa.Column('started_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('completed_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('transcription_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('api_key_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('deleted_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], name=op.f('fk_transcription_tasks_api_key_id_api_keys')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transcription_tasks'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transcription_tasks')
    op.drop_index(op.f('ix_api_keys_user_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_key_hash'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_table('users')
    op.drop_index(op.f('ix_admins_email'), table_name='admins')
    op.drop_table('admins')
    # ### end Alembic commands ###
